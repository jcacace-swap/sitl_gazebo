<?xml version="1.0"?>

<robot name="iris" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  -->
  <xacro:arg name='name' default='iris' />
  <xacro:arg name='mavlink_addr' default='INADDR_ANY' />
  <xacro:arg name='mavlink_udp_port' default='14560' />
  <xacro:arg name='serial_enabled' default='false' />
  <xacro:arg name='serial_device' default='/dev/ttyACM0' />
  <xacro:arg name='baudrate' default='921600' />
  <xacro:arg name='qgc_addr' default='INADDR_ANY' />
  <xacro:arg name='qgc_udp_port' default='14550' />
  <xacro:arg name='hil_mode' default='false' />
  <xacro:arg name='hil_state_level' default='false' />
  <xacro:arg name='send_odometry' default='false' />
  <xacro:arg name='vehicle_is_tailsitter' default='false' />
  <xacro:arg name='visual_material' default='DarkGrey' />
  <xacro:arg name='enable_mavlink_interface' default='true' />
  <xacro:arg name='enable_wind' default='false' />
  <!-- The following causes segfault with multiple vehicles if defaults to true!!! -->
  <xacro:arg name='enable_ground_truth' default='false' />
  <xacro:arg name='enable_logging' default='false' />
  <xacro:arg name='log_file' default='iris' />

  <!-- macros for gazebo plugins, sensors -->
  <xacro:include filename="$(arg rotors_description_dir)/urdf/component_snippets.xacro" />

  <!-- Instantiate iris "mechanics" -->
  <xacro:include filename="$(arg rotors_description_dir)/urdf/tarot/tarot.xacro" />

  <xacro:if value="$(arg enable_wind)">
    <xacro:wind_plugin_macro
        namespace="${namespace}"
        wind_direction="0 0 1"
        wind_force_mean="0.7"
        xyz_offset="1 0 0"
        wind_gust_direction="0 0 0"
        wind_gust_duration="0"
        wind_gust_start="0"
        wind_gust_force_mean="0"
        />
  </xacro:if>


    <!-- Instantiate gps plugin. -->
  <xacro:gps_plugin_macro
    namespace="${namespace}"
    gps_noise="true"
    >
  </xacro:gps_plugin_macro>

  <xacro:if value="$(arg enable_mavlink_interface)">
  <!-- Instantiate mavlink telemetry interface. -->
  <xacro:mavlink_interface_macro
    namespace="${namespace}"
    imu_sub_topic="/imu"
    gps_sub_topic="/gps"
    mavlink_addr="$(arg mavlink_addr)"
    mavlink_udp_port="$(arg mavlink_udp_port)"
    serial_enabled="$(arg serial_enabled)"
    serial_device="$(arg serial_device)"
    baudrate="$(arg baudrate)"
    qgc_addr="$(arg qgc_addr)"
    qgc_udp_port="$(arg qgc_udp_port)"
    hil_mode="$(arg hil_mode)"
    hil_state_level="$(arg hil_state_level)"
    vehicle_is_tailsitter="$(arg vehicle_is_tailsitter)"
    send_odometry="$(arg send_odometry)"
    >
  </xacro:mavlink_interface_macro>
  </xacro:if>

	<!-- Mount a Camera -->

	<xacro:camera_macro
		  namespace="${namespace}"
			parent_link="base_link"
			camera_suffix="raw"
			frame_rate="30"
			horizontal_fov="1.4"
			image_width="1280"
			image_height="720"
			image_format="B8G8R8"
			min_distance="0.02"
			max_distance="300"
			noise_mean="0.0"
			noise_stddev="0.008"
			enable_visual="1"
		>
		<box size="0.02 0.02 0.02" />
		<origin xyz="0.12 0 -0.02" rpy="0.0 1.1 0.0" />
	</xacro:camera_macro>

	<!--
  <xacro:xtion_pro_live name="rgbd_camera" parent="base_link"> 
	 	<origin xyz="0.11 0.0 -0.02" rpy="0.0 0.95 0.0"/>
    <origin xyz="0 0 0" rpy="0.0 0 0.0"/>
	</xacro:xtion_pro_live>

	    <xacro:hokuyo_utm30lx name="laser_scanner" parent="base_link" ros_topic="scan" update_rate="40" ray_count="1081" min_angle="-135" max_angle="135">
      <origin xyz="0.0 0.0 0.06" rpy="${M_PI} 0 0"/>
    </xacro:hokuyo_utm30lx>
-->
	<!--
	<xacro:macro name="hokuyo_utm30lx_model" params="name parent *origin">
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${name}_frame"/>
    </joint>

    <link name="${name}_frame">
      <inertial>
        <mass value="0.270" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="2.632e-4" ixy="0" ixz="0" iyy="2.632e-4" iyz="0" izz="1.62e-4" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
        <box size="0.025 0.025 0.035" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
        <box size="0.025 0.025 0.035" />
      </geometry>
      </collision>
    </link>
  </xacro:macro>

	<xacro:macro name="hokuyo_utm30lx" params="name parent *origin ros_topic update_rate ray_count min_angle max_angle">
      <xacro:hokuyo_utm30lx_model name="${name}" parent="${parent}">
        <xacro:insert_block name="origin" />
      </xacro:hokuyo_utm30lx_model>

      <gazebo reference="${name}_frame">
        <sensor type="ray" name="${name}">
          <always_on>true</always_on>
          <update_rate>${update_rate}</update_rate>
          <pose>0 0 0.0 0 0 0</pose>
          <visualize>false</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>${ray_count}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle * M_PI/180}</min_angle>
                <max_angle>${max_angle * M_PI/180}</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.2</min>
              <max>30.0</max>
              <resolution>0.01</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.004</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_${name}_controller" filename="libgazebo_ros_laser.so">
            <topicName>${ros_topic}</topicName>
            <frameName>${name}_frame</frameName>
          </plugin>
        </sensor>
      </gazebo>
   </xacro:macro>
	-->
	<!-- 
	<xacro:sonar_sensor
		name="sonar"
		parent="base_link"
		ros_topic="sonar"
		min_range="0.2"
		max_range="8.0"
		field_of_view="10"
		ray_count="2"
		update_rate="5"
	>
  <origin xyz="0.0 0.0 -0.04" rpy="0 0 3.14" />

	</xacro:sonar_sensor>
	-->

  <!-- Mount an ADIS16448 IMU. -->
  <xacro:imu_plugin_macro
    namespace="${namespace}"
    imu_suffix=""
    parent_link="base_link"
    imu_topic="/imu"
    mass_imu_sensor="0.015"
    gyroscope_noise_density="0.0003394"
    gyroscopoe_random_walk="0.000038785"
    gyroscope_bias_correlation_time="1000.0"
    gyroscope_turn_on_bias_sigma="0.0087"
    accelerometer_noise_density="0.004"
    accelerometer_random_walk="0.006"
    accelerometer_bias_correlation_time="300.0"
    accelerometer_turn_on_bias_sigma="0.1960"
  >
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_plugin_macro>

  <xacro:if value="$(arg enable_ground_truth)">
    <!-- Mount an IMU providing ground truth. -->
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      imu_suffix="gt"
      parent_link="base_link"
      imu_topic="ground_truth/imu"
      mass_imu_sensor="0.00001"
      gyroscope_noise_density="0.0"
      gyroscopoe_random_walk="0.0"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0"
      accelerometer_noise_density="0.0"
      accelerometer_random_walk="0.0"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.0"
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>

    <!-- Mount a generic odometry sensor providing ground truth. -->
    <xacro:odometry_plugin_macro
      namespace="${namespace}/ground_truth"
      odometry_sensor_suffix="gt"
      parent_link="base_link"
      pose_topic="pose"
      pose_with_covariance_topic="pose_with_covariance"
      position_topic="position"
      transform_topic="transform"
      odometry_topic="odometry"
      parent_frame_id="world"
      mass_odometry_sensor="0.00001"
      measurement_divisor="1"
      measurement_delay="0"
      unknown_delay="0.0"
      noise_normal_position="0 0 0"
      noise_normal_quaternion="0 0 0"
      noise_normal_linear_velocity="0 0 0"
      noise_normal_angular_velocity="0 0 0"
      noise_uniform_position="0 0 0"
      noise_uniform_quaternion="0 0 0"
      noise_uniform_linear_velocity="0 0 0"
      noise_uniform_angular_velocity="0 0 0"
      enable_odometry_map="false"
      odometry_map=""
      image_scale=""
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:if>

  <xacro:if value="$(arg enable_logging)">
    <!-- Instantiate a logger -->
    <xacro:bag_plugin_macro
      namespace="${namespace}"
      bag_file="$(arg log_file)"
      rotor_velocity_slowdown_sim="${rotor_velocity_slowdown_sim}"
    >
    </xacro:bag_plugin_macro>
  </xacro:if>

</robot>
